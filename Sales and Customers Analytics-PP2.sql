-- Determine the top 10 customers by total purchase amount:

SELECT TOP 10 c.customer_id, c.name, SUM(s.quantity * p.price) AS total_purchase_amount
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
JOIN products p ON s.product_id = p.product_id
GROUP BY c.customer_id, c.name
ORDER BY total_purchase_amount DESC;

-- Find the most popular products by category.

SELECT p.category, p.product_name, SUM(s.quantity) AS total_sold
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.category, p.product_name
ORDER BY p.category, total_sold DESC;

-- Calculate the total revenue generated in each month.

SELECT FORMAT(s.sale_date, 'yyyy-MM') AS month,  -- For MySQL/PostgreSQL (Use FORMAT in SQL Server)
SUM(s.quantity * p.price) AS total_revenue
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY FORMAT(s.sale_date, 'yyyy-MM')  -- Group by year and month
ORDER BY month;

-- Identify customers who haven’t made a purchase in the last year.

SELECT c.customer_id, c.name
FROM customers c
LEFT JOIN sales s ON c.customer_id = s.customer_id
WHERE s.sale_id IS NULL 
   OR s.sale_date < DATEADD(YEAR, -1, GETDATE());

-- Find the Top 5 Most Expensive Products

SELECT TOP 5 product_id,
       product_name,
       price
FROM Products
ORDER BY price DESC

-- Identify the Average Purchase Frequency per Customer

SELECT c.customer_id, c.name,
COUNT(s.sale_id) / NULLIF(DATEDIFF(MONTH, MIN(s.sale_date), MAX(s.sale_date)), 0) AS avg_purchases_per_month
FROM Customers c
JOIN Sales s 
	ON c.customer_id = s.customer_id
GROUP BY c.customer_id, c.name;

-- Determine the Total Revenue Generated by Each Product

SELECT p.product_id, p.product_name,
SUM(p.price * s.quantity) AS total_revenue
FROM Sales s
JOIN Products p 
	ON s.product_id = p.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_revenue DESC;

-- Find the Top 3 Locations with the Highest Total Sales

SELECT TOP 3 c.location,
SUM(p.price * s.quantity) AS total_revenue
FROM Sales s
JOIN Products p 
	ON s.product_id = p.product_id
JOIN Customers c 
	ON s.customer_id = c.customer_id
GROUP BY c.location
ORDER BY total_revenue DESC













